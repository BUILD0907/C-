// Fig. 11.11: fig11_11.c
// Writing data randomly to a random-access file
#include <stdio.h>
#define SIZE 10
#define EXAM 4

// clientData structure definition               
typedef struct clientData {                              
   char name[20];//20
    int ID, math, compu;//12
    float avg ;//8      
}STU;            
 
int main(void) 
{ 
   FILE *cfPtr; // accounts.dat file pointer
   unsigned int i;

   // fopen opens the file; exits if file cannot be opened
   if ((cfPtr = fopen("accounts.dat", "wb")) == NULL) {
      puts("File could not be opened.");
   } 
   else { 
      // create clientData with default information
    	STU client = {"",0, 0, 0.0};

    	STU myStu[SIZE], tempStu;  
    // initialize a
    	int studentGrade[SIZE][EXAM] = { {1,74,55,0},{2,56,88,0}, {3,84,11,0},
    	{4,88,52,0}, {5,100,100,0}, {6,0,0,0}, {7,51,81,0}, {8,74,14,0},
    	{9,77,55,0}, {10,97,68,0} };
    	const char* name[SIZE] = { "Danny","Jerry","Tom","Sue","Mary","John","Mark","Nina","Apple","Juice" };
    	puts("Data items in original order");
    // output original array
   
    	for (i = 0; i < SIZE; ++i) {          
        strcpy(myStu[i].name, name[i]);
        myStu[i].ID = studentGrade[i][0];
        myStu[i].math = studentGrade[i][1];
        myStu[i].compu = studentGrade[i][2];
        myStu[i].avg = ((float)myStu[i].math+myStu[i].compu)/2;
    }

      // user enters information, which is copied into file
    for (i = 0; i < SIZE; ++i) { 
         

         // seek position in file to user-specified record   
         fseek(cfPtr, (myStu[i].ID - 1) *              
            sizeof(STU), SEEK_SET);         

         // write user-specified information in file              
         fwrite(&myStu[i].ID, sizeof(STU), 1, cfPtr);
         
      } 

      fclose(cfPtr); // fclose closes the file
   } 
} 
